<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userQuery">
    
    
    <select id="list" resultType="hashmap" >
        SELECT @RNUM := @RNUM + 1 AS ROWNUM, t.*
			FROM(
			
				SELECT /* userQuery.list */
					IDX,
					MEMBER_ID,
					MEMBER_NM,
					MEMBER_CEL,
					MEMBER_ROLE,
					DATE_FORMAT(REG_DT,'%Y-%m-%d %H:%i') AS REG_DT,
					case (MEMBER_ROLE)
						when 0 then '무료회원'
						when 1 then '유료회원'
				    else '무료회원'
					end AS MEMBER_ROLE_DESC
				FROM BG_MEMBER 
				WHERE 1=1 
				<if test="search_type != null and search_type != ''">
					<if test="search_type == 'id'">
						AND ( MEMBER_ID LIKE CONCAT('%', #{search}, '%'))
					</if>
					<if test="search_type == 'name'">
						AND ( MEMBER_NM LIKE CONCAT('%', #{search}, '%'))
					</if>
					<if test="search_type == 'cel'">
						AND ( REPLACE(MEMBER_CEL, '-', '')  LIKE CONCAT('%', #{search}, '%'))
					</if>
				</if>
				<if test="member_role !=null and member_role !=''">
				    AND MEMBER_ROLE = #{member_role}
				</if>
				<if test="search_start_date !=null and search_start_date !=''">
					AND DATE_FORMAT(REG_DT,'%Y%m%d') <![CDATA[ >= ]]> #{search_start_date} 
				</if>
				<if test="search_end_date !=null and search_end_date !=''">
					AND DATE_FORMAT(REG_DT,'%Y%m%d') <![CDATA[ <= ]]> #{search_end_date}
				</if>
				
				ORDER BY IDX ASC
		) t, ( SELECT @RNUM := 0 ) R
		ORDER BY @RNUM DESC
		<if test="startNo != null and perPage != null">
			LIMIT #{startNo}, #{perPage}
		</if>
	</select>
	
    <select id="listCount" resultType="int">
		SELECT /* userQuery.listCount */
			COUNT(*) AS LIST_COUNT
		FROM BG_MEMBER 
		WHERE 1=1 
		<if test="search_type != null and search_type != ''">
			<if test="search_type == 'id'">
				AND ( MEMBER_ID LIKE CONCAT('%', #{search}, '%'))
			</if>
			<if test="search_type == 'name'">
				AND ( MEMBER_NM LIKE CONCAT('%', #{search}, '%'))
			</if>
			<if test="search_type == 'cel'">
				AND ( REPLACE(MEMBER_CEL, '-', '')  LIKE CONCAT('%', #{search}, '%'))
			</if>
		</if>
		<if test="member_role !=null and member_role !=''">
		    AND MEMBER_ROLE = #{member_role}
		</if>
		<if test="search_start_date !=null and search_start_date !=''">
			AND DATE_FORMAT(REG_DT,'%Y%m%d') <![CDATA[ >= ]]> #{search_start_date} 
		</if>
		<if test="search_end_date !=null and search_end_date !=''">
			AND DATE_FORMAT(REG_DT,'%Y%m%d') <![CDATA[ <= ]]> #{search_end_date}
		</if>
    </select>

    
    <select id="adminMemberInfo" resultType="hashmap">
        SELECT /* userQuery.adminMemberInfo  */
        	MEMBER_TYPE, MEMBER_ID
        FROM BG_MEMBER
        WHERE MEMBER_ID = #{ member_id } 
        and MEMBER_PW = PASSWORD(#{ member_pwd }) 
    </select>
    
    <select id="detail" resultType="hashmap">
        SELECT /* userQuery.detail */ 
        	IDX
			, MEMBER_NM
			, MEMBER_ID
			, MEMBER_EMAIL
			, MEMBER_CEL
			, MEMBER_GENDER
			, MEMBER_YEAR
			, MEMBER_MONTH
			, MEMBER_DAY
			, MEMBER_ADDR_1
			, MEMBER_ADDR_2
			, case (MEMBER_ROLE)
				when 0 then '무료회원'
				when 1 then '유료회원'
		      else '무료회원'
			  end AS MEMBER_ROLE
			, (SELECT REG_DT FROM BG_PAYMENT_HIS
		        WHERE 1=1
		        AND MEMBER_ID = #{member_id}
		        ORDER BY REG_DT DESC LIMIT 1 ) AS PAYDAY
        FROM BG_MEMBER
        WHERE MEMBER_ID = #{ member_id }
    </select>
    
    <select id="childInfo" resultType="hashmap">
        SELECT /* userQuery.childInfo */
        	 IDX
	         , CHILD_NM
	         , PHOTO
	         , GENDER
	         , BIRTH_YEAR
	         , BIRTH_MONTH
	         , BIRTH_DAY
	         , DATE_FORMAT(REG_DT,'%Y.%m.%d') AS REG_DT
        FROM BG_CHILDREN
        WHERE 1=1
        AND PARENT_MEMBER_ID = #{member_id}
        ORDER BY IDX DESC 
        LIMIT 2
    </select>
    
    <select id="paymentsInfo" resultType="hashmap">
        SELECT @RNUM := @RNUM + 1 AS ROWNUM, t.*
			FROM(
		        SELECT /* userQuery.paymentsInfo */ 
		        	IDX
		        	, DATE_FORMAT(REG_DT,'%Y.%m.%d') AS REG_DT
		        	, (SELECT CODE_DETAIL FROM BG_CODE WHERE CODE = PAYMENT_CODE) AS PAYMENT_CODE
		        	, (SELECT CODE_DETAIL FROM BG_CODE WHERE CODE = PAYMENT_PROCESS) AS PAYMENT_PROCESS
		        	, PRICE
		        	, IF(TO_DAYS(EXPIRE_DT) - TO_DAYS(now() ) > 0, TO_DAYS(EXPIRE_DT) - TO_DAYS(now() ), 0) AS REMINE_DAY
		        FROM BG_PAYMENT_HIS
		        WHERE 1=1
		        AND MEMBER_ID = #{member_id}
		        ORDER BY IDX ASC
        	) t, ( SELECT @RNUM := 0 ) R
		ORDER BY @RNUM DESC
    </select>
    
    <select id="queryInfo" resultType="hashmap">
        SELECT @RNUM := @RNUM + 1 AS ROWNUM, t.*
			FROM(
		        SELECT /* userQuery.queryInfo */
		        	BBC.TITLE
		        	, DATE_FORMAT(BBC.REG_DT,'%Y.%m.%d') AS REG_DT
		        	, CASE (SELECT COUNT(COMMENT_ID) FROM BG_BOARD_COMMENTS WHERE CONTENTS_ID = BBC.CONTENTS_ID)
		        	WHEN 0 THEN '미처리'
		        	ELSE '답변완료' 
		        	END AS ANSWER_YN
		        FROM BG_BOARD_CONTENTS BBC, BG_BOARD_MASTER BBM
		        WHERE 1=1
		        AND BBM.BOARD_ID = BBC.BOARD_ID        
		        AND BBC.MEMBER_ID = #{member_id}
		        AND BBM.BOARD_ID =3
        ) t, ( SELECT @RNUM := 0 ) R
		ORDER BY @RNUM DESC
        
    </select>
    
    <select id="top" resultType="hashmap" >
		SELECT /* userQuery.top */
			IDX,
			MEMBER_ID,
			MEMBER_NM,
			MEMBER_CEL,
			MEMBER_ROLE,
			DATE_FORMAT(REG_DT,'%Y-%m-%d %H:%i') AS REG_DT,
			case (MEMBER_ROLE)
				when 0 then '무료회원'
				when 1 then '유료회원'
		    else '무료회원'
			end AS MEMBER_ROLE
		FROM BG_MEMBER 
		WHERE 1=1 
		ORDER BY IDX DESC
		LIMIT #{limitCount}
	</select>
	
    <update id="modifyUserInfo">
        UPDATE BG_MEMBER 
        SET
        	MEMBER_NM = #{member_name}
        	, MEMBER_EMAIL = #{member_email}
        	, MEMBER_CEL = #{member_cel}
        	, MEMBER_ADDR_1 = #{member_addr_1}
        	, MEMBER_ADDR_2 = #{member_addr_2}
        	<!-- 
        	, MEMBER_GENDER = #{member_gender}
        	, MEMBER_YEAR = #{member_year}
        	, MEMBER_MONTH = #{member_month}
        	, MEMBER_DAY = #{member_day}
        	 -->
        WHERE 1=1
        AND MEMBER_ID = #{member_id}
        
    </update>
    
    <update id="modifyChildInfo">
        UPDATE BG_CHILDREN
        SET
        	CHILD_NM = #{child_name}
        	, PHOTO = #{img_path}
        	, GENDER = #{gender}
        	, BIRTH_YEAR = #{birth_year}
        	, BIRTH_MONTH = #{birth_month}
        	, BIRTH_DAY = #{birth_day}
        WHERE 1=1
        AND IDX = #{child_idx}
        
    </update>
    
	
</mapper>